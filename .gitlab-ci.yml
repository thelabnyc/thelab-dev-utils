stages:
  - build

variables:
  BASE_IMAGE_TAG: "22.04@sha256:01a3ee0b5e413cefaaffc6abe68c9c37879ae3cced56a8e088b1649e5b269eee"
  UBUNTU_VERSION: "22.04"
  PLATFORMS: "linux/arm64/v8,linux/amd64"

build:
  stage: build
  image: docker:latest@sha256:d33eb93fe02683e984e6f8a93c0b3d85bb74f56ec83922bc39fb34ba23ab42bc
  services:
    - docker:dind@sha256:75c0cb1b328158f4adcafcae7a4b02737825422744ff55121a0dbac13ccb770c

  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      variables:
        TAG_SUFFIX: "-mr${CI_MERGE_REQUEST_IID}"
    # No suffix for default branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
      variables:
        TAG_SUFFIX: ""

  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:latest"
    - docker pull "ubuntu:${BASE_IMAGE_TAG}"

    # Install QEMU emulation support in the kernel
    # See: https://docs.docker.com/buildx/working-with-buildx/#build-multi-platform-images
    - docker run --privileged --rm tonistiigi/binfmt --install all

    # Create a buildx instance if one doesn't already exist
    - if [ "$(docker buildx ls | grep docker-container  | wc -l)" -le "0" ]; then
        docker context create buildx-build;
        docker buildx create --use buildx-build;
      fi

    - docker buildx build
        --platform "$PLATFORMS"
        --pull
        --build-arg BASE_IMAGE_TAG=$BASE_IMAGE_TAG
        --cache-from "$CI_REGISTRY_IMAGE:latest"
        --tag "$CI_REGISTRY_IMAGE:${UBUNTU_VERSION}.${CI_PIPELINE_IID}${TAG_SUFFIX}"
        --tag "$CI_REGISTRY_IMAGE:latest${TAG_SUFFIX}"
        --push
        .
