stages:
  - build

variables:
  BASE_IMAGE_TAG: "24.04@sha256:7c06e91f61fa88c08cc74f7e1b7c69ae24910d745357e0dfe1d2c0322aaf20f9"
  UBUNTU_VERSION: "24.04"
  PLATFORMS: "linux/arm64/v8,linux/amd64"

build:
  stage: build
  image: docker:latest@sha256:c0872aae4791ff427e6eda52769afa04f17b5cf756f8267e0d52774c99d5c9de
  services:
    - docker:dind@sha256:c0872aae4791ff427e6eda52769afa04f17b5cf756f8267e0d52774c99d5c9de

  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      variables:
        TAG_SUFFIX: "-mr${CI_MERGE_REQUEST_IID}"
    # No suffix for default branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
      variables:
        TAG_SUFFIX: ""

  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:latest"
    - docker pull "ubuntu:${BASE_IMAGE_TAG}"

    # Install QEMU emulation support in the kernel
    # See: https://docs.docker.com/buildx/working-with-buildx/#build-multi-platform-images
    - docker run --privileged --rm tonistiigi/binfmt --install all

    # Create a buildx instance if one doesn't already exist
    - if [ "$(docker buildx ls | grep docker-container  | wc -l)" -le "0" ]; then
      docker context create buildx-build;
      docker buildx create --use buildx-build;
      fi

    - docker buildx build
      --platform "$PLATFORMS"
      --pull
      --build-arg BASE_IMAGE_TAG=$BASE_IMAGE_TAG
      --cache-from "$CI_REGISTRY_IMAGE:latest"
      --tag "$CI_REGISTRY_IMAGE:${UBUNTU_VERSION}.${CI_PIPELINE_IID}${TAG_SUFFIX}"
      --tag "$CI_REGISTRY_IMAGE:latest${TAG_SUFFIX}"
      --push
      .
